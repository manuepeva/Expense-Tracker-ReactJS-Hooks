{"version":3,"sources":["components/header/Header.js","context/AppReducer.js","context/GlobalState.js","Utils/format.js","components/balance/Balance.js","components/incomeexpenses/IncomeExpenses.js","components/transactionlist/Transaction.js","components/transactionlist/TransactionList.js","components/addtransaction/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c492ea1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n\r\n\r\nexport default Header\r\n","export default (state, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'GET_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: action.payload\r\n            }\r\n\r\n\r\n        case 'Delete_Transaction':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction =>\r\n                    transaction._id !== action.payload)\r\n            }\r\n        case 'Add_Transaction':\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload]\r\n            }\r\n        case 'TRANSACTION_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default: return state;\r\n\r\n    }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n    transactions: [],\r\n    error: null,\r\n    loading: true\r\n\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\n\r\nconst GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions \r\n\r\n    async function getTransactions() {\r\n        try {\r\n            const res = await axios.get('/api/v1/transactions');\r\n\r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data.data\r\n            });\r\n\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    async function deleteTransaction(id) {\r\n        try {\r\n            await axios.delete(`/api/v1/transactions/${id}`);\r\n            dispatch({\r\n                type: 'Delete_Transaction',\r\n                payload: id\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    async function addTransaction(transaction) {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/v1/transactions', transaction, config);\r\n            dispatch({\r\n                type: 'Add_Transaction',\r\n                payload: res.data.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        getTransactions,\r\n        deleteTransaction, addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}\r\n\r\nexport default GlobalProvider;","export function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React, { useContext } from 'react'\r\n\r\nimport { GlobalContext } from '../../context/GlobalState';\r\n\r\nimport { numberWithCommas } from '../../Utils/format';\r\n\r\nconst Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <div>\r\n            <h4>Your Balance</h4>\r\n            <h1 id=\"balance\">${numberWithCommas(total)}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../../context/GlobalState';\r\n\r\nimport { numberWithCommas } from '../../Utils/format';\r\n\r\nconst IncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const income = amounts.filter(item => item > 0).reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    const expense = (\r\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * -1).toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p id=\"money-plus\" className=\"money plus\" >${numberWithCommas(income)}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p id=\"money-minus\" className=\"money minus\">${numberWithCommas(expense)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default IncomeExpenses\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalState';\r\n\r\nimport { numberWithCommas } from '../../Utils/format';\r\n\r\n\r\nconst Transaction = ({ transaction }) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <div>\r\n            <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n                {transaction.text} <span>{sign}${numberWithCommas(Math.abs(transaction.amount))}</span>\r\n                <button onClick={() => deleteTransaction(transaction._id)} className=\"delete-btn\">x</button>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Transaction;","import React, { useContext, useEffect } from 'react'\r\nimport { GlobalContext } from '../../context/GlobalState';\r\nimport Transaction from './Transaction';\r\n\r\n\r\nconst TransactionList = () => {\r\n    const { transactions, getTransactions } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        getTransactions();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction =>\r\n                    (<Transaction key={transaction.id} transaction={transaction} />))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransactionList;","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalState';\r\n\r\n\r\nconst AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n        addTransaction(newTransaction);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Add New Transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter your text\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter your text\" />\r\n                </div>\r\n                <button className=\"btn\">Add Transaction</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default AddTransaction;\r\n","import React from 'react';\r\nimport Header from './components/header/Header';\r\nimport Balance from './components/balance/Balance'\r\nimport IncomeExpenses from './components/incomeexpenses/IncomeExpenses';\r\nimport TransactionList from './components/transactionlist/TransactionList';\r\nimport AddTransaction from './components/addtransaction/AddTransaction';\r\nimport GlobalProvider from './context/GlobalState';\r\n\r\nimport './components/styles/styles.css';\r\n\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <GlobalProvider>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <Balance />\r\n                <IncomeExpenses />\r\n                <TransactionList />\r\n                <AddTransaction />\r\n            </div>\r\n        </GlobalProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}